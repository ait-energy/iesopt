{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Simple grid tariffs (ex. 53)\n",
    "\n",
    "## Overview\n",
    "\n",
    "The relevant section of the top-level YAML looks like this:\n",
    "\n",
    "```yaml\n",
    "components:\n",
    "  # ... other stuff ...\n",
    "\n",
    "  grid_market:\n",
    "    type: Node\n",
    "    carrier: electricity\n",
    "\n",
    "  grid_internal:\n",
    "    type: Node\n",
    "    carrier: electricity\n",
    "  \n",
    "  # NOTE: `0.05` (here ct/kWh) is the energy related tariff for consumption.\n",
    "  grid_connection_buy:\n",
    "    type: Connection\n",
    "    node_from: grid_market\n",
    "    node_to: grid_internal\n",
    "    lb: 0\n",
    "    ub: tariff_power_consumption:value\n",
    "    cost: 0.05\n",
    "  \n",
    "  # NOTE: No power peak related cost for feeding electricity back to the grid.\n",
    "  grid_connection_sell:\n",
    "    type: Connection\n",
    "    node_from: grid_internal\n",
    "    node_to: grid_market\n",
    "    lb: 0\n",
    "    ub: 1000\n",
    "    cost: 0.07\n",
    "\n",
    "  # NOTE: This assumes `1000` (here kW) as maximum grid connection. `1.15` is the power peak related tariff.\n",
    "  tariff_power_consumption:\n",
    "    type: Decision\n",
    "    lb: 0\n",
    "    ub: 1000\n",
    "    cost: 1.15\n",
    "```\n",
    "\n",
    "This is a simple grid tariff model. The `grid_market` and `grid_internal` nodes represent the grid and the internal grid respectively. The `grid_connection_buy` and `grid_connection_sell` connections represent the flow of electricity from the grid to the internal grid and vice versa. The `tariff_power_consumption` decision represents the power peak related tariff for consumption. The `grid_connection_buy` connection has a cost of 0.05 ct/kWh and the `grid_connection_sell` connection has a cost of 0.07 ct/kWh. The `tariff_power_consumption` decision has a cost of 1.15 ct/kW.\n",
    "\n",
    "> Note that the numbers are completely arbitrary and are only used for demonstration purposes."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Running the example\n",
    "\n",
    "First, import `iesopt`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "tags": [
     "remove-stdout",
     "remove-stderr"
    ]
   },
   "outputs": [],
   "source": [
    "import iesopt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then, create a local copy of the IESopt example."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:iesopt:Data folder for examples already exists; NOT copying ANY contents\n",
      "INFO:iesopt:Creating example ('53_grid_tariffs') at: 'opt/53_grid_tariffs.iesopt.yaml'\n",
      "INFO:iesopt:Set write permissions for example ('opt/53_grid_tariffs.iesopt.yaml'), and data folder ('opt/files')\n"
     ]
    }
   ],
   "source": [
    "config = iesopt.make_example(\"53_grid_tariffs\", \"opt\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, run the model and observe some results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>snapshot</th>\n",
       "      <th>component</th>\n",
       "      <th>fieldtype</th>\n",
       "      <th>field</th>\n",
       "      <th>value</th>\n",
       "      <th>mode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>654</th>\n",
       "      <td>t1</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>32.016632</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>655</th>\n",
       "      <td>t2</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>36.590437</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>656</th>\n",
       "      <td>t3</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>41.164241</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>657</th>\n",
       "      <td>t4</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>45.738046</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>658</th>\n",
       "      <td>t5</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>50.311850</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>659</th>\n",
       "      <td>t6</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>54.885655</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>660</th>\n",
       "      <td>t7</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>59.459459</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>661</th>\n",
       "      <td>t8</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>54.054054</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>662</th>\n",
       "      <td>t9</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>48.648649</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>663</th>\n",
       "      <td>t10</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>43.243243</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>664</th>\n",
       "      <td>t11</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>37.837838</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>665</th>\n",
       "      <td>t12</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>32.432432</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>666</th>\n",
       "      <td>t13</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>27.027027</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>667</th>\n",
       "      <td>t14</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>21.621622</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>668</th>\n",
       "      <td>t15</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>16.216216</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>669</th>\n",
       "      <td>t16</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>10.810811</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>670</th>\n",
       "      <td>t17</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>5.405405</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>671</th>\n",
       "      <td>t18</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>672</th>\n",
       "      <td>t19</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>4.573805</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>673</th>\n",
       "      <td>t20</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>9.147609</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>674</th>\n",
       "      <td>t21</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>13.721414</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>675</th>\n",
       "      <td>t22</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>18.295218</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>676</th>\n",
       "      <td>t23</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>22.869023</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>677</th>\n",
       "      <td>t24</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>27.442827</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    snapshot component fieldtype  field      value    mode\n",
       "654       t1        ev       var  state  32.016632  primal\n",
       "655       t2        ev       var  state  36.590437  primal\n",
       "656       t3        ev       var  state  41.164241  primal\n",
       "657       t4        ev       var  state  45.738046  primal\n",
       "658       t5        ev       var  state  50.311850  primal\n",
       "659       t6        ev       var  state  54.885655  primal\n",
       "660       t7        ev       var  state  59.459459  primal\n",
       "661       t8        ev       var  state  54.054054  primal\n",
       "662       t9        ev       var  state  48.648649  primal\n",
       "663      t10        ev       var  state  43.243243  primal\n",
       "664      t11        ev       var  state  37.837838  primal\n",
       "665      t12        ev       var  state  32.432432  primal\n",
       "666      t13        ev       var  state  27.027027  primal\n",
       "667      t14        ev       var  state  21.621622  primal\n",
       "668      t15        ev       var  state  16.216216  primal\n",
       "669      t16        ev       var  state  10.810811  primal\n",
       "670      t17        ev       var  state   5.405405  primal\n",
       "671      t18        ev       var  state  -0.000000  primal\n",
       "672      t19        ev       var  state   4.573805  primal\n",
       "673      t20        ev       var  state   9.147609  primal\n",
       "674      t21        ev       var  state  13.721414  primal\n",
       "675      t22        ev       var  state  18.295218  primal\n",
       "676      t23        ev       var  state  22.869023  primal\n",
       "677      t24        ev       var  state  27.442827  primal"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = iesopt.run(config, config={\"general.verbosity.core\": \"error\"})\n",
    "\n",
    "model.results.to_pandas().query(\n",
    "    \"component == 'ev' and field == 'state' and mode == 'primal'\"\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>snapshot</th>\n",
       "      <th>component</th>\n",
       "      <th>fieldtype</th>\n",
       "      <th>field</th>\n",
       "      <th>value</th>\n",
       "      <th>mode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>289</th>\n",
       "      <td>None</td>\n",
       "      <td>tariff_power_consumption</td>\n",
       "      <td>var</td>\n",
       "      <td>value</td>\n",
       "      <td>4.573805</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    snapshot                 component fieldtype  field     value    mode\n",
       "289     None  tariff_power_consumption       var  value  4.573805  primal"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.results.to_pandas().query(\n",
    "    \"component == 'tariff_power_consumption' and fieldtype == 'var' and mode == 'primal'\"\n",
    ")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
