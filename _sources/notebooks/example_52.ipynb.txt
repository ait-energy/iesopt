{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A simple EV (ex. 52)\n",
    "\n",
    "## Overview\n",
    "\n",
    "The relevant section of the top-level YAML looks like this:\n",
    "\n",
    "```yaml\n",
    "components:\n",
    "  # ... other stuff ...\n",
    "\n",
    "  # NOTE: This could be a `Unit` instead, to allow more complex behaviours.\n",
    "  # This assumes a rated power of \"40 kW\" and only allows charging while the EV is actually connected.\n",
    "  charger:\n",
    "    type: Connection\n",
    "    node_from: grid\n",
    "    node_to: ev\n",
    "    loss: 0.05\n",
    "    lb: 0\n",
    "    ub: 40.0 * connected@data\n",
    "\n",
    "  ev:\n",
    "    type: Node\n",
    "    carrier: electricity\n",
    "    has_state: true\n",
    "    state_lb: 0\n",
    "    state_ub: 100\n",
    "\n",
    "  ev_demand:\n",
    "    type: Profile\n",
    "    carrier: electricity\n",
    "    node_from: ev\n",
    "    value: demand@data\n",
    "```\n",
    "\n",
    "This models the EV as a storage that is _sometimes_ connected to the grid - if it is, with a maximum power of 40 kW. The EV has a state of charge that can vary between 0 and 100 kWh. The demand of the EV is given by the `ev_demand` profile and taken out of the storage. Check the config file as well as the data file for more details."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Running the example\n",
    "\n",
    "First, import `iesopt`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "tags": [
     "remove-stdout",
     "remove-stderr"
    ]
   },
   "outputs": [],
   "source": [
    "import iesopt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then, create a local copy of the IESopt example."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:iesopt:Data folder for examples does not exist; creating it, and copying contents\n",
      "INFO:iesopt:Creating example ('52_simple_ev') at: 'opt/52_simple_ev.iesopt.yaml'\n",
      "INFO:iesopt:Set write permissions for example ('opt/52_simple_ev.iesopt.yaml'), and data folder ('opt/files')\n"
     ]
    }
   ],
   "source": [
    "config = iesopt.make_example(\"52_simple_ev\", \"opt\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, run the model and observe some results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>snapshot</th>\n",
       "      <th>component</th>\n",
       "      <th>fieldtype</th>\n",
       "      <th>field</th>\n",
       "      <th>value</th>\n",
       "      <th>mode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>t1</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>55.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>t2</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>55.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>t3</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>55.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>t4</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>55.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>t5</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>55.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>t6</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>55.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>t7</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>55.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>t8</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>50.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>t9</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>45.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>t10</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>40.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>t11</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>35.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>t12</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>30.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>t13</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>25.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>t14</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>20.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>t15</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>15.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>t16</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>10.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>t17</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>5.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>t18</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>-0.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>t19</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>17.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>t20</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>17.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>t21</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>17.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>t22</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>17.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191</th>\n",
       "      <td>t23</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>17.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>t24</td>\n",
       "      <td>ev</td>\n",
       "      <td>var</td>\n",
       "      <td>state</td>\n",
       "      <td>17.0</td>\n",
       "      <td>primal</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    snapshot component fieldtype  field  value    mode\n",
       "169       t1        ev       var  state   55.0  primal\n",
       "170       t2        ev       var  state   55.0  primal\n",
       "171       t3        ev       var  state   55.0  primal\n",
       "172       t4        ev       var  state   55.0  primal\n",
       "173       t5        ev       var  state   55.0  primal\n",
       "174       t6        ev       var  state   55.0  primal\n",
       "175       t7        ev       var  state   55.0  primal\n",
       "176       t8        ev       var  state   50.0  primal\n",
       "177       t9        ev       var  state   45.0  primal\n",
       "178      t10        ev       var  state   40.0  primal\n",
       "179      t11        ev       var  state   35.0  primal\n",
       "180      t12        ev       var  state   30.0  primal\n",
       "181      t13        ev       var  state   25.0  primal\n",
       "182      t14        ev       var  state   20.0  primal\n",
       "183      t15        ev       var  state   15.0  primal\n",
       "184      t16        ev       var  state   10.0  primal\n",
       "185      t17        ev       var  state    5.0  primal\n",
       "186      t18        ev       var  state   -0.0  primal\n",
       "187      t19        ev       var  state   17.0  primal\n",
       "188      t20        ev       var  state   17.0  primal\n",
       "189      t21        ev       var  state   17.0  primal\n",
       "190      t22        ev       var  state   17.0  primal\n",
       "191      t23        ev       var  state   17.0  primal\n",
       "192      t24        ev       var  state   17.0  primal"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = iesopt.run(config, config={\"general.verbosity.core\": \"error\"})\n",
    "\n",
    "model.results.to_pandas().query(\n",
    "    \"component == 'ev' and field == 'state' and mode == 'primal'\"\n",
    ")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
